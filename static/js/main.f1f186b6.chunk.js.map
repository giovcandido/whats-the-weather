{"version":3,"sources":["components/PageHeader/PageHeader.module.sass","components/ThemeContainer/ThemeContainer.module.sass","pages/Home/Home.module.sass","assets/logo.svg","components/ErrorMessage/ErrorMessage.module.sass","components/PageFooter/PageFooter.module.sass","config/config.ts","services/api.ts","shared/hooks/useDarkThemeState.ts","components/ThemeButton/ThemeButton.tsx","components/PageHeader/PageHeader.tsx","components/ThemeContainer/ThemeContainer.tsx","components/ErrorMessage/ErrorMessage.tsx","components/WeatherCard/WeatherCard.tsx","components/PageFooter/PageFooter.tsx","pages/Home/Home.tsx","pages/City/City.tsx","router/router.tsx","App.tsx","index.tsx","components/WeatherCard/WeatherCard.module.sass"],"names":["module","exports","baseURL","appid","api","axios","create","config","params","fetchCurrentWeather","city","units","a","get","response","data","useDarkThemeState","initialState","useState","state","setState","useEffect","prevState","localStorage","getItem","parsedPrevState","JSON","parse","setItem","stringify","ThemeButton","dark","onThemeChange","className","onClick","size","PageHeader","darkTheme","styles","pageHeader","logo","src","alt","settings","ThemeContainer","children","themeClass","light","ErrorMessage","message","onErrorClose","error","WeatherCard","weatherData","name","sys","main","weather","wind","card","cardHeader","country","cardMain","cardTemp","icon","temp","feels_like","description","cardDetails","temp_max","temp_min","humidity","speed","PageFooter","pageFooter","href","rel","target","Home","setDarkTheme","cityName","setCityName","allWeatherData","setAllWeatherData","errorMessage","setErrorMessage","retrieveData","status","handleCitySearch","event","preventDefault","find","pageSearch","onSubmit","type","placeholder","value","onChange","e","length","pageCards","map","key","City","Router","basename","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,SAAW,+B,mBCAzGD,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,KAAO,+B,mBCA/DD,EAAOC,QAAU,CAAC,WAAa,yBAAyB,UAAY,0B,mBCDpED,EAAOC,QAAU,IAA0B,kC,mBCC3CD,EAAOC,QAAU,CAAC,MAAQ,8B,mBCA1BD,EAAOC,QAAU,CAAC,WAAa,iC,mNCDhB,EACR,CACHC,QAAS,2CACTC,MAAO,oCCELC,E,OAAMC,EAAMC,OAAO,CACvBJ,QAASK,EAAWL,QACpBM,OAAQ,CACNL,MAAOI,EAAWJ,SAUPM,EANU,uCAAG,WAAOC,EAAcC,GAArB,eAAAC,EAAA,sEACHR,EAAIS,IAAJ,qBAAsBH,EAAtB,kBAAoCC,IADjC,cACpBG,EADoB,yBAGnBA,EAASC,MAHU,2CAAH,wDCUVC,EApBW,SAACC,GAA2B,IAAD,EACzBC,mBAAkBD,GADO,mBAC5CE,EAD4C,KACrCC,EADqC,KAiBnD,OAdAC,qBAAU,WACR,IAAMC,EAAYC,aAAaC,QAAQ,gCAEvC,GAAGF,EAAU,CACX,IAAMG,EAA2BC,KAAKC,MAAML,GAE5CF,EAASK,MAEV,IAEHJ,qBAAU,WACRE,aAAaK,QAAQ,+BAAgCF,KAAKG,UAAUV,MACnE,CAACA,IAEG,CAACA,EAAOC,I,0CCeFU,EA1BkC,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,cAmBvD,OACE,4BAAQC,UAAU,UAAUC,QAAS,kBAAMF,MAlBxCD,EAEC,oCACE,kBAAC,IAAD,CAAgBI,KAAM,KACtB,6CAMJ,oCACE,kBAAC,IAAD,CAAaA,KAAM,KACnB,8CCKOC,EAfgC,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,UAAWL,EAAmB,EAAnBA,cAC1D,OACE,4BAAQC,UAAWK,IAAOC,YACxB,yBAAKN,UAAWK,IAAOE,MACrB,yBAAKC,IAAKD,IAAME,IAAI,sBACpB,oDAGF,yBAAKT,UAAWK,IAAOK,UACrB,kBAAC,EAAD,CAAaZ,KAAMM,EAAWL,cAAeA,O,iBCPtCY,EAVmC,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,SAC5CC,EADgE,EAAVf,KAClCO,IAAOP,KAAOO,IAAOS,MAE/C,OACE,yBAAKd,UAAWa,GACbD,I,iCCcQG,EAZmC,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aAC3D,OACE,yBAAKjB,UAAWK,IAAOa,OACrB,6BACE,kBAAC,IAAD,CAAUhB,KAAM,KAChB,2BAAIc,IAEN,4BAAQf,QAAS,kBAAMgB,MAAgB,kBAAC,IAAD,CAAaf,KAAM,Q,gBCmBjDiB,EA/BmD,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAC3DC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,IAAKC,EAAuBH,EAAvBG,KAAMC,EAAiBJ,EAAjBI,QAASC,EAAQL,EAARK,KAEjC,OACE,6BAASzB,UAAWK,IAAOqB,MACzB,4BAAQ1B,UAAWK,IAAOsB,YACxB,8BAAON,GACP,8BAAOC,EAAIM,UAEb,yBAAK5B,UAAWK,IAAOwB,UACrB,yBAAK7B,UAAWK,IAAOyB,UACrB,yBAAKtB,IAAG,2CAAsCgB,EAAQ,GAAGO,KAAjD,QAA6DtB,IAAI,iBACzE,8BAAOc,EAAKS,KAAZ,UAEF,6CAAmBT,EAAKU,WAAxB,SACA,8BAAOT,EAAQ,GAAGD,KAAlB,KAA0BC,EAAQ,GAAGU,cAEvC,yBAAKlC,UAAWK,IAAO8B,aACrB,6BACE,2CAAiBZ,EAAKa,SAAtB,SACA,2CAAiBb,EAAKc,SAAtB,UAEF,6BACE,2CAAiBd,EAAKe,SAAtB,KACA,6CAAmBb,EAAKc,MAAxB,Y,iBClBKC,EARc,WAC3B,OACE,4BAAQxC,UAAWK,IAAOoC,YACxB,sCAAW,uBAAGC,KAAK,iCAAiCC,IAAI,sBAAsBC,OAAO,UAA1E,sB,iBC6FFC,EAnFQ,WAAO,IAAD,EACO9D,GAAkB,GADzB,mBACpBqB,EADoB,KACT0C,EADS,OAGK7D,mBAAiB,IAHtB,mBAGpB8D,EAHoB,KAGVC,EAHU,OAIiB/D,mBAAgC,IAJjD,mBAIpBgE,EAJoB,KAIJC,EAJI,OAKajE,mBAAiB,IAL9B,mBAKpBkE,EALoB,KAKNC,EALM,KAOrBC,EAAY,uCAAG,4BAAA1E,EAAA,+EAEEH,EAAoBuE,EAAU,UAFhC,OAEXjE,EAFW,OAIjBoE,EAAkB,CAACpE,GAAF,mBAAWmE,KAE5BD,EAAY,IACZI,EAAgB,IAPC,qDASV,KAAIvE,SAASyE,OATH,OAUV,MAVU,QAaV,MAbU,QAgBV,MAhBU,gCAWbF,EAAgB,4CAXH,oCAcbA,EAAgB,8CAdH,oCAiBbA,EAAgB,yDAjBH,8EAAH,qDAuBZG,EAAgB,uCAAG,WAAOC,GAAP,SAAA7E,EAAA,yDACvB6E,EAAMC,iBAEFV,EAHmB,uBAIrBK,EAAgB,2DAJK,8BAQAH,EAAeS,MAAK,SAAAtC,GACzC,OAAOA,EAAYC,OAAS0B,KATP,uBAarBK,EAAgB,4CAbK,0BAiBvBC,IAjBuB,2CAAH,sDAoBtB,OACE,kBAAC,EAAD,CAAgBvD,KAAMM,GACpB,yBAAKJ,UAAU,iBACb,kBAAC,EAAD,CAAYI,UAAWA,EAAWL,cAAe,kBAAM+C,GAAc1C,MACrE,6BAASJ,UAAWK,IAAOsD,YACzB,6EACA,0BAAMC,SAAUL,GACd,2BAAOM,KAAK,OAAOC,YAAY,sBAAsBC,MAAOhB,EAAUiB,SAAU,SAACC,GAAD,OAAOjB,EAAYiB,EAAErB,OAAOmB,UAC5G,4BAAQF,KAAK,UAAS,kBAAC,IAAD,SAGzBV,GACC,kBAAC,EAAD,CAAcnC,QAASmC,EAAclC,aAAc,WAAOmC,EAAgB,IAAKJ,EAAY,OAE5FC,EAAeiB,OAAS,GACvB,6BAASlE,UAAU,IACjB,6BAASA,UAAWK,IAAO8D,WACxBlB,EAAemB,KAAI,SAAAhD,GAAW,OAC7B,kBAAC,EAAD,CAAaiD,IAAKjD,EAAYC,KAAMD,YAAaA,QAGrD,4BAAQpB,UAAU,UAAUC,QAAS,kBAAMiD,EAAkB,MAC3D,kBAAC,IAAD,CAAgBhD,KAAM,KACtB,uDAIN,kBAAC,EAAD,SCtFOoE,EANQ,WACrB,OACE,qCCaWC,EAXU,WACvB,OACE,kBAAC,IAAD,CAAeC,SAAS,qBACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW9B,IACjC,kBAAC,IAAD,CAAO4B,KAAK,QAAQE,UAAWL,OCDxBM,G,MAJO,WACpB,OAAO,kBAAC,EAAD,QCFTC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCR1BlH,EAAOC,QAAU,CAAC,KAAO,0BAA0B,WAAa,gCAAgC,SAAW,8BAA8B,SAAW,8BAA8B,YAAc,oC","file":"static/js/main.f1f186b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"PageHeader_pageHeader__3l_28\",\"logo\":\"PageHeader_logo__2qcHR\",\"settings\":\"PageHeader_settings__8aLZu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"light\":\"ThemeContainer_light__2ySts\",\"dark\":\"ThemeContainer_dark__fXumE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageSearch\":\"Home_pageSearch__301k6\",\"pageCards\":\"Home_pageCards__1M-tS\"};","module.exports = __webpack_public_path__ + \"static/media/logo.d488f7c0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ErrorMessage_error__3vZcv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageFooter\":\"PageFooter_pageFooter__W30_N\"};","export default {\n  api: {\n    baseURL: 'https://api.openweathermap.org/data/2.5/',\n    appid: 'eed7c5dd45934b30dbe53cde898f3a45'\n  }\n}","import axios from 'axios';\nimport config from '../config/config';\n\nimport ICurrentWeatherData from '../shared/interfaces/ICurrentWeatherData';\n\nconst api = axios.create({\n  baseURL: config.api.baseURL,\n  params: {\n    appid: config.api.appid\n  }\n});\n\nconst fetchCurrentWeather = async (city: string, units: string) => {\n  const response = await api.get(`/weather?q=${city}&units=${units}`);\n\n  return response.data as ICurrentWeatherData;\n}\n\nexport default fetchCurrentWeather;","import { useState, useEffect } from 'react';\n\nconst useDarkThemeState = (initialState: boolean) => {\n  const [state, setState] = useState<boolean>(initialState);\n  \n  useEffect(() => {\n    const prevState = localStorage.getItem('@whats-the-weather:DarkTheme');\n\n    if(prevState){\n      const parsedPrevState: boolean = JSON.parse(prevState);\n      \n      setState(parsedPrevState);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('@whats-the-weather:DarkTheme', JSON.stringify(state));\n  }, [state]);\n\n  return [state, setState] as const;\n}\n\nexport default useDarkThemeState;","import React from 'react';\nimport {FaLightbulb, FaRegLightbulb} from 'react-icons/fa';\n\ninterface IThemeButtonProps{\n  dark: boolean;\n  onThemeChange: Function;\n}\n\nconst ThemeButton: React.FC<IThemeButtonProps> = ({dark, onThemeChange}) => {\n  const renderButtonContent = () => {\n    if(dark){\n      return (\n        <>\n          <FaRegLightbulb size={15} />\n          <span>Lights out</span>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <FaLightbulb size={15} />\n        <span>Lights on</span>\n      </>\n    );\n  }\n\n  return (\n    <button className=\"btnLink\" onClick={() => onThemeChange()}>\n      {renderButtonContent()}\n    </button>\n  );\n}\n\nexport default ThemeButton;","import React from 'react';\n\nimport styles from './PageHeader.module.sass';\nimport logo from '../../assets/logo.svg';\n\nimport ThemeButton from '../../components/ThemeButton/ThemeButton';\n\ninterface IPageHeaderProps{\n  darkTheme: boolean;\n  onThemeChange: Function;\n}\n\nconst PageHeader: React.FC<IPageHeaderProps> = ({darkTheme, onThemeChange}) => {\n  return (\n    <header className={styles.pageHeader}>\n      <div className={styles.logo}>\n        <img src={logo} alt=\"Green clouds logo\" />\n        <h3>What's the weather?</h3>\n      </div>\n    \n      <div className={styles.settings}>\n        <ThemeButton dark={darkTheme} onThemeChange={onThemeChange}/>\n      </div>\n    </header>\n  );\n}\n\nexport default PageHeader;","import React from 'react';\n\nimport styles from './ThemeContainer.module.sass';\n\nconst ThemeContainer: React.FC<{dark: boolean}> = ({children, dark}) => {\n  const themeClass = dark ? styles.dark : styles.light;\n\n  return (\n    <div className={themeClass}>\n      {children}\n    </div>\n  );\n}\n\nexport default ThemeContainer;","import React from 'react';\nimport {VscError} from 'react-icons/vsc';\nimport {GrFormClose} from 'react-icons/gr';\n\nimport styles from './ErrorMessage.module.sass';\n\ninterface ErrorMessageProps{\n  message: string;\n  onErrorClose: Function;\n}\n\nconst ErrorMessage: React.FC<ErrorMessageProps> = ({message, onErrorClose}) => {\n  return (\n    <div className={styles.error}>\n      <div>\n        <VscError size={20} />\n        <p>{message}</p>\n      </div>\n      <button onClick={() => onErrorClose()}><GrFormClose size={20}/></button>\n    </div>\n  );\n}\n\nexport default ErrorMessage;","import React from 'react';\n\nimport ICurrentWeatherData from '../../shared/interfaces/ICurrentWeatherData';\n\nimport styles from './WeatherCard.module.sass';\n\nconst WeatherCard: React.FC<{weatherData: ICurrentWeatherData}> = ({weatherData}) => {\n  const {name, sys, main, weather, wind} = weatherData;\n\n  return (\n    <article className={styles.card}>\n      <header className={styles.cardHeader}>\n        <span>{name}</span>\n        <span>{sys.country}</span>\n      </header>\n      <div className={styles.cardMain}>\n        <div className={styles.cardTemp}>\n          <img src={`https://openweathermap.org/img/w/${weather[0].icon}.png`} alt=\"weather icon\" />\n          <span>{main.temp}°C</span>\n        </div>                \n        <span>Feels like: {main.feels_like}°C</span>\n        <span>{weather[0].main}: {weather[0].description}</span>\n      </div>\n      <div className={styles.cardDetails}>\n        <div>\n          <span>Max temp: {main.temp_max}°C</span>\n          <span>Min temp: {main.temp_min}°C</span>\n        </div>\n        <div>\n          <span>Humidity: {main.humidity}%</span>\n          <span>Wind speed: {wind.speed}km/h</span>\n        </div>\n      </div>\n    </article>\n  );\n}\n\nexport default WeatherCard;","import React from 'react';\n\nimport styles from './PageFooter.module.sass';\n\nconst PageFooter: React.FC = () => {\n  return (\n    <footer className={styles.pageFooter}>\n      <p>Made by <a href=\"https://github.com/giovcandido\" rel=\"noopener noreferrer\" target=\"_blank\">Giovani Candido</a></p>\n    </footer>  \n  );\n}\n\nexport default PageFooter;","import React, { FormEvent, useState } from 'react';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport { AiOutlineClear } from 'react-icons/ai';\n\nimport fetchCurrentWeather from '../../services/api';\nimport ICurrentWeatherData from '../../shared/interfaces/ICurrentWeatherData';\n\nimport useDarkThemeState from '../../shared/hooks/useDarkThemeState';\n\nimport PageHeader from '../../components/PageHeader/PageHeader'; \nimport ThemeContainer from '../../components/ThemeContainer/ThemeContainer';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport WeatherCard from '../../components/WeatherCard/WeatherCard';\nimport PageFooter from '../../components/PageFooter/PageFooter';\n\nimport styles from './Home.module.sass';\n\nconst Home: React.FC = () => {\n  const [darkTheme, setDarkTheme] = useDarkThemeState(true);\n  \n  const [cityName, setCityName] = useState<string>('');\n  const [allWeatherData, setAllWeatherData] = useState<ICurrentWeatherData[]>([]);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  const retrieveData = async () => {\n    try{\n      const data = await fetchCurrentWeather(cityName, 'metric');\n    \n      setAllWeatherData([data, ...allWeatherData]);\n\n      setCityName('');\n      setErrorMessage('');\n    }catch(err){\n      switch(err.response.status){\n        case 401:\n          setErrorMessage('Make sure you are using a valid API key.');\n          break;\n        case 404:\n          setErrorMessage('No city with the specified name was found.');\n          break;\n        case 429:\n          setErrorMessage('You have made too much requests. Try again in a hour.');\n          break;\n      }\n    }\n  }\n\n  const handleCitySearch = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    \n    if(!cityName){\n      setErrorMessage('Type the name of the city to be searched. Ex: New York.');\n      return;\n    }\n\n    const alreadyHasCity = allWeatherData.find(weatherData => {\n      return weatherData.name === cityName;\n    });\n\n    if(alreadyHasCity){\n      setErrorMessage('You have already searched for this city.');\n      return;\n    }\n\n    retrieveData();\n  }\n\n  return(\n    <ThemeContainer dark={darkTheme}>\n      <div className=\"pageContainer\">\n        <PageHeader darkTheme={darkTheme} onThemeChange={() => setDarkTheme(!darkTheme)} />\n        <section className={styles.pageSearch}>\n          <h1>Get weather information for any city you want</h1>\n          <form onSubmit={handleCitySearch}>\n            <input type=\"text\" placeholder=\"Enter the city name\" value={cityName} onChange={(e) => setCityName(e.target.value)} />\n            <button type=\"submit\"><BiSearchAlt /></button>\n          </form>\n        </section>\n        {errorMessage && (\n          <ErrorMessage message={errorMessage} onErrorClose={() => {setErrorMessage(''); setCityName('')}} />\n        )}\n        {allWeatherData.length > 0 && (\n          <section className=\"\">\n            <section className={styles.pageCards}>\n              {allWeatherData.map(weatherData => (\n                <WeatherCard key={weatherData.name} weatherData={weatherData} />\n              ))}\n            </section>\n            <button className=\"btnLink\" onClick={() => setAllWeatherData([])}>\n              <AiOutlineClear size={15} />\n              <span>Clear weather cards</span>\n            </button>\n          </section>\n        )}\n        <PageFooter />\n      </div>\n    </ThemeContainer>\n  );\n};\n\nexport default Home;","import React from 'react';\n\nconst City: React.FC = () => {\n  return(\n    <h1>City</h1>\n  );\n};\n\nexport default City;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Home from '../pages/Home/Home';\nimport City from '../pages/City/City';\n\nconst Router: React.FC = () => {\n  return (\n    <BrowserRouter basename=\"whats-the-weather\">\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/city\" component={City} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;","import React from 'react';\n\nimport Router from './router/router';\n\nimport './App.sass';\n\nconst App: React.FC = () => {\n  return <Router />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"WeatherCard_card__1rleN\",\"cardHeader\":\"WeatherCard_cardHeader__xEZtB\",\"cardMain\":\"WeatherCard_cardMain__1pagX\",\"cardTemp\":\"WeatherCard_cardTemp__-DBjo\",\"cardDetails\":\"WeatherCard_cardDetails__3nF_Z\"};"],"sourceRoot":""}