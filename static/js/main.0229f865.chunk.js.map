{"version":3,"sources":["components/ThemeContainer/ThemeContainer.module.sass","assets/logo.svg","pages/Home/Home.module.sass","config/config.ts","services/api.ts","shared/hooks/useDarkThemeState.ts","components/ThemeContainer/ThemeContainer.tsx","components/ThemeButton/ThemeButton.tsx","components/WeatherCard/WeatherCard.tsx","pages/Home/Home.tsx","pages/City/City.tsx","router/router.tsx","App.tsx","index.tsx","components/WeatherCard/WeatherCard.module.sass"],"names":["module","exports","baseURL","appid","api","axios","create","config","params","fetchCurrentWeather","city","units","a","get","response","useDarkThemeState","initialState","useState","state","setState","useEffect","prevState","localStorage","getItem","parsedPrevState","JSON","parse","ThemeContainer","children","themeClass","dark","styles","light","className","ThemeButton","handleThemeChange","onClick","size","WeatherCard","currentWeatherData","name","sys","main","weather","wind","card","cardHeader","country","cardMain","cardTemp","src","icon","alt","temp","feels_like","description","cardDetails","temp_max","temp_min","humidity","speed","Home","setCity","citiesWeatherData","setCitiesWeatherData","handleCitySearch","event","preventDefault","data","console","log","darkTheme","setDarkTheme","setItem","stringify","pageContainer","pageHeader","logo","settings","pageSearch","onSubmit","type","placeholder","value","onChange","e","target","pageCards","map","cityWeatherData","key","pageFooter","href","rel","City","Router","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,KAAO,+B,mBCD/DD,EAAOC,QAAU,IAA0B,kC,sDCC3CD,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,WAAa,yBAAyB,WAAa,yBAAyB,WAAa,yBAAyB,UAAY,wBAAwB,KAAO,mBAAmB,SAAW,yB,uKCD1O,EACR,CACHC,QAAS,0CACTC,MAAO,oCCCLC,E,OAAMC,EAAMC,OAAO,CACvBJ,QAASK,EAAWL,QACpBM,OAAQ,CACNL,MAAOI,EAAWJ,SAUPM,EANU,uCAAG,WAAOC,EAAcC,GAArB,eAAAC,EAAA,sEACHR,EAAIS,IAAJ,qBAAsBH,EAAtB,kBAAoCC,IADjC,cACpBG,EADoB,yBAGnBA,GAHmB,2CAAH,wDCOVC,EAhBW,SAACC,GAA2B,IAAD,EACzBC,mBAAkBD,GADO,mBAC5CE,EAD4C,KACrCC,EADqC,KAanD,OAVAC,qBAAU,WACR,IAAMC,EAAYC,aAAaC,QAAQ,2BAEvC,GAAGF,EAAU,CACX,IAAMG,EAA2BC,KAAKC,MAAML,GAE5CF,EAASK,MAEV,IAEI,CAACN,EAAOC,I,iBCDFQ,EAVmC,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,SAC5CC,EADgE,EAAVC,KAClCC,IAAOD,KAAOC,IAAOC,MAE/C,OACE,yBAAKC,UAAWJ,GACbD,I,QCyBQM,EA1BkC,SAAC,GAA+B,IAA9BJ,EAA6B,EAA7BA,KAAMK,EAAuB,EAAvBA,kBAmBvD,OACE,4BAAQC,QAAS,kBAAMD,MAlBpBL,EAEC,oCACE,kBAAC,IAAD,CAAgBO,KAAM,KACtB,6CAMJ,oCACE,kBAAC,IAAD,CAAaA,KAAM,KACnB,8C,gBCmBOC,EA/BkC,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,mBAC1CC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,IAAKC,EAAuBH,EAAvBG,KAAMC,EAAiBJ,EAAjBI,QAASC,EAAQL,EAARK,KAEjC,OACE,6BAASX,UAAWF,IAAOc,MACzB,4BAAQZ,UAAWF,IAAOe,YACxB,8BAAON,GACP,8BAAOC,EAAIM,UAEb,yBAAKd,UAAWF,IAAOiB,UACrB,yBAAKf,UAAWF,IAAOkB,UACrB,yBAAKC,IAAG,0CAAqCP,EAAQ,GAAGQ,KAAhD,QAA4DC,IAAI,iBACxE,8BAAOV,EAAKW,KAAZ,UAEF,6CAAmBX,EAAKY,WAAxB,SACA,8BAAOX,EAAQ,GAAGD,KAAlB,KAA0BC,EAAQ,GAAGY,cAEvC,yBAAKtB,UAAWF,IAAOyB,aACrB,6BACE,2CAAiBd,EAAKe,SAAtB,SACA,2CAAiBf,EAAKgB,SAAtB,UAEF,6BACE,2CAAiBhB,EAAKiB,SAAtB,KACA,6CAAmBf,EAAKgB,MAAxB,Y,iCC2CKC,EA9DQ,WAAO,IAAD,EACH5C,mBAAiB,IADd,mBACpBP,EADoB,KACdoD,EADc,OAEuB7C,mBAAgC,IAFvD,mBAEpB8C,EAFoB,KAEDC,EAFC,KAIrBC,EAAgB,uCAAG,WAAOC,GAAP,iBAAAtD,EAAA,6DACvBsD,EAAMC,iBADiB,kBAIE1D,EAAoBC,EAAM,UAJ5B,OAIfI,EAJe,OAMfsD,EAA4BtD,EAASsD,KAE3CJ,EAAqB,CAACI,GAAF,mBAAWL,KAE/BD,EAAQ,IAVa,kDAYrBO,QAAQC,IAAR,MAZqB,0DAAH,sDAJK,EAoBOvD,GAAkB,GApBzB,mBAoBpBwD,EApBoB,KAoBTC,EApBS,KA8B3B,OAJApD,qBAAU,WACRE,aAAamD,QAAQ,0BAA2BhD,KAAKiD,UAAUH,MAC9D,CAACA,IAGF,kBAAC,EAAD,CAAgBzC,KAAMyC,GACpB,yBAAKtC,UAAWF,IAAO4C,eACrB,4BAAQ1C,UAAWF,IAAO6C,YACxB,yBAAK3C,UAAWF,IAAO8C,MACrB,yBAAK3B,IAAK2B,IAAMzB,IAAI,qBACpB,oDAEF,yBAAKnB,UAAWF,IAAO+C,UACrB,kBAAC,EAAD,CAAahD,KAAMyC,EAAWpC,kBAjBd,WACxBqC,GAAcD,QAmBV,6BAAStC,UAAWF,IAAOgD,YACzB,6EACA,0BAAMC,SAAUf,GACd,2BAAOgB,KAAK,OAAOC,YAAY,sBAAsBC,MAAOzE,EAAM0E,SAAU,SAACC,GAAD,OAAOvB,EAAQuB,EAAEC,OAAOH,UACpG,4BAAQF,KAAK,UAAS,kBAAC,IAAD,CAAa5C,KAAM,QAG7C,6BAASJ,UAAWF,IAAOwD,WACxBxB,EAAkByB,KAAI,SAAAC,GAAe,OACpC,kBAAC,EAAD,CAAaC,IAAKD,EAAgBjD,KAAMD,mBAAoBkD,QAGhE,4BAAQxD,UAAWF,IAAO4D,YACxB,sCAAW,uBAAGC,KAAK,iCAAiCC,IAAI,sBAAsBP,OAAO,UAA1E,wBC9DNQ,EANQ,WACrB,OACE,qCCWWC,EATU,WACvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWrC,IACjC,kBAAC,IAAD,CAAOmC,KAAK,QAAQE,UAAWJ,MCKtBK,G,MARO,WACpB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,SCLNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCR1BxG,EAAOC,QAAU,CAAC,KAAO,0BAA0B,WAAa,gCAAgC,SAAW,8BAA8B,SAAW,8BAA8B,YAAc,oC","file":"static/js/main.0229f865.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"light\":\"ThemeContainer_light__2ySts\",\"dark\":\"ThemeContainer_dark__fXumE\"};","module.exports = __webpack_public_path__ + \"static/media/logo.d488f7c0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"Home_pageContainer__J2MvR\",\"pageHeader\":\"Home_pageHeader__2YlT1\",\"pageFooter\":\"Home_pageFooter__2Am1z\",\"pageSearch\":\"Home_pageSearch__301k6\",\"pageCards\":\"Home_pageCards__1M-tS\",\"logo\":\"Home_logo__TorYP\",\"settings\":\"Home_settings__2k4IJ\"};","export default {\n  api: {\n    baseURL: 'http://api.openweathermap.org/data/2.5/',\n    appid: 'eed7c5dd45934b30dbe53cde898f3a45'\n  }\n}","import axios from 'axios';\n\nimport config from '../config/config';\n\nconst api = axios.create({\n  baseURL: config.api.baseURL,\n  params: {\n    appid: config.api.appid\n  }\n});\n\nconst fetchCurrentWeather = async (city: string, units: string) => {\n  const response = await api.get(`/weather?q=${city}&units=${units}`);\n\n  return response;\n}\n\nexport default fetchCurrentWeather;","import { useState, useEffect } from 'react';\n\nconst useDarkThemeState = (initialState: boolean) => {\n  const [state, setState] = useState<boolean>(initialState);\n  \n  useEffect(() => {\n    const prevState = localStorage.getItem('@whats-the-weather:Dark');\n\n    if(prevState){\n      const parsedPrevState: boolean = JSON.parse(prevState);\n      \n      setState(parsedPrevState);\n    }\n  }, []);\n\n  return [state, setState] as const\n}\n\nexport default useDarkThemeState;","import React from 'react';\n\nimport styles from './ThemeContainer.module.sass';\n\nconst ThemeContainer: React.FC<{dark: boolean}> = ({children, dark}) => {\n  const themeClass = dark ? styles.dark : styles.light;\n\n  return (\n    <div className={themeClass}>\n      {children}\n    </div>\n  );\n}\n\nexport default ThemeContainer;","import React from 'react';\nimport {FaLightbulb, FaRegLightbulb} from 'react-icons/fa';\n\ninterface IThemeButtonProps{\n  dark: boolean;\n  handleThemeChange: Function;\n}\n\nconst ThemeButton: React.FC<IThemeButtonProps> = ({dark, handleThemeChange}) => {\n  const renderButtonContent = () => {\n    if(dark){\n      return (\n        <>\n          <FaRegLightbulb size={15} />\n          <span>Lights out</span>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <FaLightbulb size={15} />\n        <span>Lights on</span>\n      </>\n    );\n  }\n\n  return (\n    <button onClick={() => handleThemeChange()}>\n      {renderButtonContent()}\n    </button>\n  );\n}\n\nexport default ThemeButton;","import React from 'react';\n\nimport ICurrentWeatherData from '../../shared/interfaces/ICurrentWeatherData';\n\nimport styles from './WeatherCard.module.sass';\n\ninterface IWeatherCardProps{\n  currentWeatherData: ICurrentWeatherData;\n}\n\nconst WeatherCard: React.FC<IWeatherCardProps> = ({currentWeatherData}) => {\n  const {name, sys, main, weather, wind} = currentWeatherData;\n\n  return (\n    <article className={styles.card}>\n      <header className={styles.cardHeader}>\n        <span>{name}</span>\n        <span>{sys.country}</span>\n      </header>\n      <div className={styles.cardMain}>\n        <div className={styles.cardTemp}>\n          <img src={`http://openweathermap.org/img/w/${weather[0].icon}.png`} alt=\"weather icon\" />\n          <span>{main.temp}째C</span>\n        </div>                \n        <span>Feels like: {main.feels_like}째C</span>\n        <span>{weather[0].main}: {weather[0].description}</span>\n      </div>\n      <div className={styles.cardDetails}>\n        <div>\n          <span>Max temp: {main.temp_max}째C</span>\n          <span>Min temp: {main.temp_min}째C</span>\n        </div>\n        <div>\n          <span>Humidity: {main.humidity}%</span>\n          <span>Wind speed: {wind.speed}km/h</span>\n        </div>\n      </div>\n    </article>\n  );\n}\n\nexport default WeatherCard;","import React, { FormEvent, useEffect, useState } from 'react';\nimport {BiSearchAlt} from 'react-icons/bi';\n\nimport fetchCurrentWeather from '../../services/api';\nimport ICurrentWeatherData from '../../shared/interfaces/ICurrentWeatherData';\n\nimport useDarkThemeState from '../../shared/hooks/useDarkThemeState';\n\nimport ThemeContainer from '../../components/ThemeContainer/ThemeContainer';\nimport ThemeButton from '../../components/ThemeButton/ThemeButton';\nimport WeatherCard from '../../components/WeatherCard/WeatherCard';\n\nimport logo from '../../assets/logo.svg';\nimport styles from './Home.module.sass';\n\nconst Home: React.FC = () => {\n  const [city, setCity] = useState<string>('');\n  const [citiesWeatherData, setCitiesWeatherData] = useState<ICurrentWeatherData[]>([]);\n  \n  const handleCitySearch = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    \n    try{\n      const response = await fetchCurrentWeather(city, 'metric');\n\n      const data: ICurrentWeatherData = response.data;\n\n      setCitiesWeatherData([data, ...citiesWeatherData]);\n\n      setCity('');\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  const [darkTheme, setDarkTheme] = useDarkThemeState(true);\n  \n  const handleThemeChange = () => {\n    setDarkTheme(!darkTheme);\n  }\n\n  useEffect(() => {\n    localStorage.setItem('@whats-the-weather:Dark', JSON.stringify(darkTheme));\n  }, [darkTheme]);\n\n  return(\n    <ThemeContainer dark={darkTheme}>\n      <div className={styles.pageContainer}>\n        <header className={styles.pageHeader}>\n          <div className={styles.logo}>\n            <img src={logo} alt=\"logo with clouds\" />\n            <h3>What's the weather?</h3>\n          </div>\n          <div className={styles.settings}>\n            <ThemeButton dark={darkTheme} handleThemeChange={handleThemeChange}/>\n          </div>\n        </header>\n        <section className={styles.pageSearch}>\n          <h1>Get weather information for any city you want</h1>\n          <form onSubmit={handleCitySearch}>\n            <input type=\"text\" placeholder=\"Enter the city name\" value={city} onChange={(e) => setCity(e.target.value)} />\n            <button type=\"submit\"><BiSearchAlt size={20} /></button>\n          </form>\n        </section>\n        <section className={styles.pageCards}>\n          {citiesWeatherData.map(cityWeatherData => (\n            <WeatherCard key={cityWeatherData.name} currentWeatherData={cityWeatherData} />\n          ))} \n        </section>\n        <footer className={styles.pageFooter}>\n          <p>Made by <a href=\"https://github.com/giovcandido\" rel=\"noopener noreferrer\" target=\"_blank\">Giovani Candido</a></p>\n        </footer>\n      </div>\n    </ThemeContainer>\n  );\n};\n\nexport default Home;","import React from 'react';\n\nconst City: React.FC = () => {\n  return(\n    <h1>City</h1>\n  );\n};\n\nexport default City;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from '../pages/Home/Home';\nimport City from '../pages/City/City';\n\nconst Router: React.FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/city\" component={City} />\n    </Switch>\n  );\n};\n\nexport default Router;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Router from './router/router';\n\nimport './App.sass';\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Router />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"WeatherCard_card__1rleN\",\"cardHeader\":\"WeatherCard_cardHeader__xEZtB\",\"cardMain\":\"WeatherCard_cardMain__1pagX\",\"cardTemp\":\"WeatherCard_cardTemp__-DBjo\",\"cardDetails\":\"WeatherCard_cardDetails__3nF_Z\"};"],"sourceRoot":""}